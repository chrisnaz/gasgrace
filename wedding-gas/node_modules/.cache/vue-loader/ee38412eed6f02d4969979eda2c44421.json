{"remainingRequest":"/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chrisnaz/Documents/Site/wedding_nono/client-app/src/components/presentations.vue?vue&type=template&id=48dcb439&","dependencies":[{"path":"/home/chrisnaz/Documents/Site/wedding_nono/client-app/src/components/presentations.vue","mtime":1623510577954},{"path":"/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chrisnaz/Documents/Site/wedding_nono/client-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}